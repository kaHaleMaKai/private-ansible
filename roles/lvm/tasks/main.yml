---
# Set up partitions using logical volume management (LVM)

- name: Install LVM package
  apt: name=lvm2 state=installed

- name: Set up volume group
  lvg: vg={{lvm.vg}}
       pvs={{ lvm.pvs|join(',') }}
       state=present
  when: lvm.vg is defined

- name: Set up multiple volume groups
  lvg: vg={{item.vg}} pvs={{ item.pvs|join(',') }}
  when: lvm.vgs is defined
  with_items:
    "{{ lvm.vgs }}"

- name: Set up logical volumes
  lvol: vg={{item.vg|default(lvm.vg)}} lv={{item.lv}} size={{item.size}}
  when: lvm.volumes is defined and (lvm.vg is defined or lvm.vgs is defined)
  with_items:
    lvm.volumes

- name: Format logical volumes
  filesystem: fstype={{item.fstype|default('ext4')}} dev=/dev/{{item.vg|default(lvm.vg)}}/{{item.lv}}
  with_items:
    lvm.volumes

- name: Create mount points
  file: path={{item.mountpoint}}
        state=directory
        mode={{ item.mode|default('0755') }}
        owner={{ item.owner|default(omit) }}
        group={{ item.group|default(omit) }}
  with_items: lvm.volumes is defined
  with_items:
    lvm.volumes

- name: Mount logical volumes
  mount: name={{item.mountpoint}} src=/dev/{{item.vg|default(lvm.vg)}}/{{item.lv}} fstype={{item.fstype | default('ext4')}} state=mounted
  when: lvm.volumes is defined and (lvm.vg is defined or lvm.vgs is defined)
  with_items:
    lvm.volumes

- name: Resize filesystem if needed
  shell: >
    resize2fs /dev/{{item.vg|default(lvm.vg)}}/{{item.lv}} 2>&1 |
    awk '
    BEGIN { failed = 1 }
    /The filesystem on.*is now.*long/
    {  print "changed"; failed = 0 }
    /Nothing to do!/
    {  print "not changed"; failed = 0 }
    END { if (failed) print "failed" }'
  when: lvm.volumes is defined and (lvm.vg is defined or lvm.vgs is defined)
  changed_when: resize2fs.stdout == 'changed'
  failed_when: resize2fs.stdout == 'failed'
  register: resize2fs
  with_items:
    lvm.volumes
